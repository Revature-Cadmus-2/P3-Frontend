name: CI_CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  WORKING_DIRECTORY: front-end
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      
      - name: npm install, build
        run: |
          npm ci
          npm run build
        shell: bash
        working-directory: ${{env.WORKING_DIRECTORY}}
        
      - name: test
        run: npm tst
        shell: bash
        working-directory: ${{env.WORKING_DIRECTORY}}
          
      # Runs the Sonar Cloud Testing
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
    
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          

#   docker:
#       runs-on: ubuntu-latest
#       steps:
#         - 
#           name: Checks out repository
#           uses: actions/checkout@v2.4.0
#         -
#           name: Set up QEMU
#           uses: docker/setup-qemu-action@v1.2.0
#         -
#           name: Set up Docker Buildx
#           uses: docker/setup-buildx-action@v1.6.0
#         -
#           name: Login to DockerHub
#           uses: docker/login-action@v1.10.0 
#           with:
#             username: ${{ secrets.DOCKERHUB_USERNAME }}
#             password: ${{ secrets.DOCKERHUB_TOKEN }}
#         -
#           name: Build and push
#           id: docker_build
#           uses: docker/build-push-action@v2.7.0
#           with:
#             push: true
#             tags: yellenick/frontend-tothemoon:${{github.run_number}}
#         - 
#           name: Log into container registry
#           uses: Azure/docker-login@v1
#           with:
#             login-server: index.docker.io
#             username: ${{ secrets.AZ_USERNAME }}
#             password: ${{ secrets.AZ_PASSWORD }}
#         - 
#           name: Set K8 config
#           uses: azure/k8s-set-context@v1.1
#           with:
#             method: kubeconfig
#             kubeconfig: ${{ secrets.KUBE_CONFIG }}
#           id: setcontext
#         -
#           name: Deplying image to K8s
#           uses: Azure/k8s-deploy@v1.3
#           with:
#             manifests: |
#               .github/workflows/tothemoon.yml
#             images: |
#               yellenick/frontend-tothemoon:${{github.run_number}}
